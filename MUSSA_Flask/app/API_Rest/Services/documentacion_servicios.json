{
  "swagger": "2.0",
  "info": {
    "description": "Los siguientes son los servicios disponibles en la API para MUSSA",
    "version": "1.0.0",
    "title": "MUSSA API REST"
  },
  "basePath": "/v1",
  "tags": [
    {
      "name": "carrera",
      "description": "Acceso a las carreras"
    },
    {
      "name": "materia",
      "description": "Acceso a las materias"
    },
    {
      "name": "curso",
      "description": "Acceso a los cursos"
    },
    {
      "name": "tematica",
      "description": "Acceso a las temáticas"
    },
    {
      "name": "docente",
      "description": "Acceso a los docentes"
    },
    {
      "name": "encuesta",
      "description": "Acceso a la estructura de encuestas. Las encuestas se dividen en tres secciones 1) 'encuesta' --> contiene las preguntas de las encuestas, las agrupaciones por categoría, etc; 2) 'respuestas alumno' --> contiene las respuestas del alumno para una determinada encuesta. Es accesible a través del alumno; 3) 'resultados encuesta' --> contiene las respuestas generales como resultados de las encuestas para un curso o un docente, es accesible a través de resultados encuesta."
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/carrera/{idCarrera}": {
      "get": {
        "tags": [
          "carrera"
        ],
        "summary": "Devuelve la carrera del ID especificado",
        "description": "Devuelve la carrera del ID especificado.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idCarrera",
            "required": true,
            "type": "integer",
            "description": "ID de la carrera buscada."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Carrera"
            }
          },
          "400": {
            "description": "BAD REQUEST. El ID de la carrera debe ser un entero mayor a 0."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "El ID de carrera no existe."
          }
        }
      }
    },
    "/carrera/all": {
      "get": {
        "tags": [
          "carrera"
        ],
        "summary": "Devuelve todas las carreras en base a los filtros enviados",
        "description": "Devuelve una lista con carreras que cumplen con los filtros enviados. Si no se indica ningun filtro devuelve todas las carreras.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "codigo_materia",
            "required": false,
            "type": "integer",
            "description": "Código de la materia para la cual se quiere saber en qué carreras se dicta. Si se quieren obtener todas las carreras en general, no enviar este parámetro."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListaCarreras"
            }
          },
          "400": {
            "description": "BAD REQUEST. Uno o más códigos de carrera no son válidos."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "Uno o más códigos de carrera no existen."
          }
        }
      }
    },
    "/materia/{idMateria}": {
      "get": {
        "tags": [
          "materia"
        ],
        "summary": "Devuelve la materia del ID especificado",
        "description": "Devuelve la materia del ID especificado.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idMateria",
            "required": true,
            "type": "integer",
            "description": "ID de la materia buscada."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Materia"
            }
          },
          "400": {
            "description": "BAD REQUEST. El ID de la materia debe ser un entero mayor a 0."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "El ID de materia no existe."
          }
        }
      }
    },
    "/materia/all": {
      "get": {
        "tags": [
          "materia"
        ],
        "summary": "Devuelve todas las materia que coincidan con los parámetros de búsqueda o todos las masterias si no se envian parámetros.",
        "description": "Devuelve todas las materia que coincidan con los parámetros de búsqueda o todos las masterias si no se envian parámetros.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "codigo_materia",
            "required": false,
            "type": "integer",
            "description": "Código de la materia buscada. Puede enviarse solo los primeros dígitos. Se buscarán todas aquellas materias cuyo código comience con el código enviado."
          },
          {
            "in": "formData",
            "name": "nombre",
            "required": false,
            "type": "integer",
            "description": "Nombre de la materia buscada. Puede enviarse una parte del nombre. Se buscarán todas aquellas materias cuyo nombre contenga el nombre enviado."
          },
          {
            "in": "formData",
            "name": "ids_carreras",
            "required": false,
            "type": "array",
            "description": "Lista de ids de carreras. No enviarlo o enviar una lista vacía implica no filtrar por carrera.",
            "items": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListaMaterias"
            }
          },
          "400": {
            "description": "BAD REQUEST. Uno o más parámetros contienen errores."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "Los ids o códigos enviados no existen."
          }
        }
      }
    },
    "/materia/{idMateria}/correlativas": {
      "get": {
        "tags": [
          "materia"
        ],
        "summary": "Devuelve todas las materias correlativas a la materia del ID especificado.",
        "description": "Devuelve todas las materias correlativas a la materia del ID especificado.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idMateria",
            "required": true,
            "type": "integer",
            "description": "ID de la materia buscada."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListaCorrelativas"
            }
          },
          "400": {
            "description": "BAD REQUEST. El ID de la materia debe ser un entero mayor a 0."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "El ID de materia no existe."
          }
        }
      }
    },
    "/curso/{idCurso}": {
      "get": {
        "tags": [
          "curso"
        ],
        "summary": "Devuelve el curso del ID especificado",
        "description": "Devuelve el curso del ID especificado.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idCurso",
            "required": true,
            "type": "integer",
            "description": "ID del curso buscado."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Curso"
            }
          },
          "400": {
            "description": "BAD REQUEST. El ID del curso debe ser un entero mayor a 0."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "El ID de curso no existe."
          }
        }
      }
    },
    "/tematica/{idTematica}": {
      "get": {
        "tags": [
          "tematica"
        ],
        "summary": "Devuelve una tematica por id",
        "description": "Devuelve los datos de un docente",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idTematica",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "El ID de la temática a buscar."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TematicaMateria"
            }
          },
          "400": {
            "description": "BAD REQUEST. El ID de la temática debe ser un entero y mayor que 0."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "La temática del ID especificado no fue encontrada."
          }
        }
      }
    },
    "/tematica/all": {
      "get": {
        "tags": [
          "tematica"
        ],
        "summary": "Devuelve una lista de tematicas",
        "description": "Devuelve una lista con temáticas. Este servicio recibe el filtro en el cual se puede especificar si se quieren recibir solo las verificadas, solo las no verificadas o todas.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "solo_verificadas",
            "required": false,
            "type": "boolean",
            "description": "Si no se envia el filtro se devuelven todas las temáticas. Si se envía en True se devuelven solo aquellas temáticas verificadas por un administrador. Si se envía en False se devuelven solo aquellas temáticas ingresadas por usuarios y no verificadas por un administrador."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListaTematicas"
            }
          },
          "400": {
            "description": "BAD REQUEST. El parámetro solo_verificadas debe ser un booleano"
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          }
        }
      }
    },
    "/docente/{idDocente}": {
      "get": {
        "tags": [
          "docente"
        ],
        "summary": "Devuelve el docente por id",
        "description": "Devuelve los datos de un docente",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idDocente",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "El ID del docente a buscar."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Docente"
            }
          },
          "400": {
            "description": "BAD REQUEST. El ID de docente debe ser un entero y mayor que 0."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "El docente del ID especificado no fue encontrado."
          }
        }
      },
      "post": {
        "tags": [
          "docente"
        ],
        "summary": "Modifica el docente del id correspondiente",
        "description": "Modifica los datos del docente del id correspondiente",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idDocente",
            "required": true,
            "type": "integer",
            "description": "El ID del docente a modificar."
          },
          {
            "in": "formData",
            "name": "apellido",
            "required": true,
            "type": "string",
            "description": "Apellido del docente"
          },
          {
            "in": "formData",
            "name": "nombre",
            "required": true,
            "type": "string",
            "description": "Nombre del docente. Si se desconoce el nombre enviar un string vacío."
          },
          {
            "in": "formData",
            "name": "ids_cursos",
            "required": true,
            "type": "array",
            "description": "Lista de ids de cursos. Si el docente no dicta ningun curso, enviar una lista vacía.",
            "items": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BAD REQUEST. Uno o más parámetros no cumplen con las condiciones requeridas."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "El docente del ID especificado no fue encontrado."
          }
        }
      },
      "delete": {
        "tags": [
          "docente"
        ],
        "summary": "Elimina un docente",
        "description": "Elimina un docente",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idDocente",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "El ID del docente a buscar."
          }
        ],
        "responses": {
          "204": {
            "description": "OK. No se devuelven datos"
          },
          "400": {
            "description": "BAD REQUEST. El ID de docente debe ser un entero y mayor que 0."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "El docente del ID especificado no fue encontrado."
          }
        }
      }
    },
    "/docente/all": {
      "get": {
        "tags": [
          "docente"
        ],
        "summary": "Devuelve todos los docentes con sus datos",
        "description": "Devuelve una lista con los datos de cada docente",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListaDocentes"
            }
          },
          "204": {
            "description": "OK. No hay datos para enviar."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          }
        }
      }
    },
    "/encuesta/preguntas": {
      "get": {
        "tags": [
          "encuesta"
        ],
        "summary": "Devuelve las preguntas de la encuesta.",
        "description": "Devuelve las preguntas de la encuesta. Existe una única encuesta por lo que no es requerido el ID de la misma.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "categorias",
            "required": true,
            "type": "array",
            "description": "Lista de Categorías / Grupos en los que se agrupan las preguntas de encuestas que se quieren buscar. Las categorías son las siguientes [GRUPO_ENCUESTA_GENERAL = 0, GRUPO_ENCUESTA_CONTENIDO = 1, GRUPO_ENCUESTA_CLASES = 2, GRUPO_ENCUESTA_EXAMENES = 3, GRUPO_ENCUESTA_DOCENTES = 4]",
            "items": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListaPreguntas"
            }
          },
          "400": {
            "description": "BAD REQUEST. Una o más categorías no son números."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "Una o más categorías enviadas no existen."
          }
        }
      }
    }
  },
  "definitions": {
    "ListaMaterias": {
      "type": "object",
      "properties": {
        "materias": {
          "type": "array",
          "description": "Lista de materias",
          "items": {
            "$ref": "#/definitions/Materia"
          }
        }
      }
    },
    "Materia": {
      "type": "object",
      "properties": {
        "id_materia": {
          "type": "integer",
          "description": "ID de la materia.",
          "example": 1
        },
        "codigo": {
          "type": "string",
          "description": "Código de la materia.",
          "example": "7540"
        },
        "nombre": {
          "type": "string",
          "description": "Nombre de la materia.",
          "example": "Algoritmos y Programación I"
        },
        "objetivos": {
          "type": "string",
          "description": "Objetivos de la materia.",
          "example": "Enseñar los fundamentos básicos de la programación."
        },
        "creditos": {
          "type": "integer",
          "description": "Créditos que otorga la materia.",
          "example": 6
        },
        "creditos_minimos_para_cursarla": {
          "type": "integer",
          "description": "Créditos mínimos que requiere la materia para ser cursada. Algunas materias en lugar de tener otras materias como correlativas solo tienen una restricción de créditos mínimos para ser cursadas. Salvo para esas materias puntuales que el valor será mayor a 0, para la mayoría el valor será exactamente 0.",
          "example": 0
        },
        "tipo_materia_id": {
          "type": "integer",
          "description": "ID del tipo de materia.",
          "example": 2
        },
        "tipo_materia": {
          "type": "string",
          "description": "Descripción del tipo de materia. El tipo de materia indica por ejemplo si es una materia electiva u obligatoria.",
          "example": "OBLIGATORIA"
        },
        "carrera_id": {
          "type": "integer",
          "description": "ID de la carrera a la que pertenece la materia.",
          "example": 1
        },
        "carrera": {
          "type": "string",
          "description": "Descripción completa de la carrera.",
          "example": "09 - Licenciatura en Análisis de Sistemas (Plan 1986)"
        }
      }
    },
    "ListaCorrelativas": {
      "type": "object",
      "properties": {
        "correlativas": {
          "type": "array",
          "description": "Lista de materias correlativas",
          "items": {
            "$ref": "#/definitions/Materia"
          }
        }
      }
    },
    "Curso": {
      "type": "object",
      "properties": {
        "id_curso": {
          "type": "integer",
          "description": "ID del curso.",
          "example": 1
        },
        "codigo_curso": {
          "type": "string",
          "description": "Código del curso.",
          "example": "2A"
        },
        "codigo_materia": {
          "type": "string",
          "description": "Código de materia a la que pertenece el curso",
          "example": "7540"
        },
        "se_dicta_primer_cuatri": {
          "type": "boolean",
          "description": "Indica si el curso se dicta los primeros cuatrimestres",
          "example": true
        },
        "se_dicta_segundo_cuatri": {
          "type": "boolean",
          "description": "Indica si el curso se dicta los segundos cuatrimestres",
          "example": true
        },
        "cuatrimestre": {
          "type": "string",
          "description": "Texto que indica en qué cuatrimestres este curso es dictado",
          "example": "Ambos cuatrimestres"
        },
        "carreras": {
          "type": "array",
          "description": "Lista de carreras a las que pertenece el curso. Un curso puede dictarse para materias de igual código en diferentes carreras.",
          "items": {
            "$ref": "#definitions/Carrera"
          }
        },
        "horarios": {
          "type": "array",
          "description": "Lista de horarios en las que es dictado el curso. La composición de estos horarios es la carga horaria completa del curso.",
          "items": {
            "$ref": "#definitions/Horario"
          }
        },
        "docentes": {
          "type": "string",
          "description": "Nombres de los docentes del curso concatenados en un único string.",
          "example": "Essaya-Wainer-Woites"
        },
        "datos_docentes": {
          "type": "array",
          "description": "Lista de datos completos de los docentes que dicatn el curso.",
          "items": {
            "$ref": "#definitions/Docente"
          }
        },
        "puntaje": {
          "type": "number",
          "description": "Puntaje del curso en base a las encuestas. El puntaje es 0 si no hay encuestas. Si hay encuestas para el curso se calcula como la cantidad de encuestas completas sobre el puntaje total de encuestas.",
          "example": 4.5
        },
        "cantidad_encuestas_completas": {
          "type": "integer",
          "description": "Total de encuestas completas y finalizadas para el curso.",
          "example": 10
        },
        "puntaje_total_encuestas": {
          "type": "integer",
          "description": "Sumatoria de los puntajes de las encuestas completas y finalizadas para el curso.",
          "example": 450
        }
      }
    },
    "Docente": {
      "type": "object",
      "properties": {
        "id_docente": {
          "type": "integer",
          "description": "ID del docente.",
          "example": 1
        },
        "apellido": {
          "type": "string",
          "description": "Apellido del docente.",
          "example": "Essaya"
        },
        "nombre": {
          "type": "string",
          "description": "Nombre del docente.",
          "example": "Diego"
        },
        "nombre_completo": {
          "type": "string",
          "description": "Nombre completo del docente. Si solo tiene apellido, es este valor, si además tiene nombre es 'Apellido, Nombre'",
          "example": "Essaya, Diego"
        },
        "materias_que_dicta": {
          "type": "array",
          "description": "Lista de materias que dicta el docente en las diferentes carreras. Si la materia que dicta la dicta en dos carreras, son dos elementos diferentes en la lista.",
          "items": {
            "$ref": "#/definitions/MateriasDocente"
          }
        }
      }
    },
    "MateriasDocente": {
      "type": "object",
      "properties": {
        "nombre": {
          "type": "string",
          "description": "Nombre de la materia.",
          "example": "7540 - Algoritmos y Programación I"
        },
        "id_carrera": {
          "type": "integer",
          "description": "ID de la carrera a la que pertenece la materia.",
          "example": 1
        },
        "carrera": {
          "type": "string",
          "description": "Descripcion de la carrera (codigo, nombre y plan) a la que pertenece la materia.",
          "example": "10 - Ingeniería en Informática (Plan 1986)"
        }
      }
    },
    "ListaDocentes": {
      "type": "object",
      "properties": {
        "docentes": {
          "type": "array",
          "description": "Lista de docentes",
          "items": {
            "$ref": "#/definitions/Docente"
          }
        }
      }
    },
    "TematicaMateria": {
      "type": "object",
      "properties": {
        "id_tematica": {
          "type": "integer",
          "description": "ID de la temática.",
          "example": 1
        },
        "tematica": {
          "type": "string",
          "description": "Descripción de la temática",
          "example": "DATA MINING"
        },
        "verificado": {
          "type": "boolean",
          "description": "Indica si la temática ha sido verificada o ingresada por un administrador (True) o si ha sido ingresada por el usuario (False).",
          "example": true
        }
      }
    },
    "ListaTematicas": {
      "type": "object",
      "properties": {
        "tematicas": {
          "type": "array",
          "description": "Lista de temáticas",
          "items": {
            "$ref": "#/definitions/TematicaMateria"
          }
        }
      }
    },
    "Carrera": {
      "type": "object",
      "properties": {
        "id_carrera": {
          "type": "integer",
          "description": "ID de la carrera",
          "example": 1
        },
        "codigo": {
          "type": "integer",
          "description": "Codigo de la carrera",
          "example": 10
        },
        "nombre": {
          "type": "string",
          "description": "Nombre de la carrera",
          "example": "Ingeniería en Informática"
        },
        "plan": {
          "type": "string",
          "description": "Plan de la carrera",
          "example": "1986"
        },
        "descripcion": {
          "type": "string",
          "description": "Descripción completa de la carrera. El formato es 'codigo - nombre de la carrera (Plan año)'",
          "example": "09 - Licenciatura en Análisis de Sistemas (Plan 1986)"
        }
      }
    },
    "ListaCarreras": {
      "type": "object",
      "properties": {
        "carreras": {
          "type": "array",
          "description": "Lista de carreras",
          "items": {
            "$ref": "#/definitions/Carrera"
          }
        }
      }
    },
    "Horario": {
      "type": "object",
      "properties": {
        "dia": {
          "type": "string",
          "description": "Dia de la semana",
          "example": "LUNES"
        },
        "hora_desde": {
          "type": "string",
          "description": "Horario de inicio",
          "example": "07:30"
        },
        "hora_hasta": {
          "type": "string",
          "description": "Horario de fin",
          "example": "12:00"
        }
      }
    },
    "ListaPreguntas": {
      "type": "object",
      "properties": {
        "preguntas": {
          "type": "array",
          "description": "Lista de preguntas",
          "items": {
            "$ref": "#/definitions/Pregunta"
          }
        }
      }
    },
    "Pregunta": {
      "type": "object",
      "properties": {
        "pregunta_encuesta_id": {
          "type": "integer",
          "description": "ID de la encuesta",
          "example": 1
        },
        "grupo_id": {
          "type": "integer",
          "description": "ID del grupo / categoría a la que pertenece la pregunta",
          "example": 1
        },
        "grupo": {
          "type": "string",
          "description": "Descripción del grupo / categoría a la que pertenece la pregunta.",
          "example": "Aspectos generales"
        },
        "excluir_si": {
          "type": "string",
          "description": "Indica en qué casos se debe excluir esta pregunta (por ejemplo, cuando es una materia obligatoria de un único curso).",
          "example": "Nunca"
        },
        "orden": {
          "type": "integer",
          "description": "Relación de orden entre las preguntas de una categoría. La pregunta de orden 0 es la primer pregunta.",
          "example": 0
        },
        "pregunta_id": {
          "type": "integer",
          "description": "ID de la pregunta",
          "example": 1
        },
        "pregunta": {
          "type": "string",
          "description": "Texto que conforma la pregunta",
          "example": "¿Qué te pareció el curso en general?"
        },
        "tipo_num": {
          "type": "integer",
          "description": "Número de tipo de pregunta. Los tipos de preguntas pueden ser [PUNTAJE_1_A_5 = 0; TEXTO_LIBRE = 1; SI_NO = 2; HORARIO = 3; DOCENTE = 4; CORRELATIVA = 5; ESTRELLAS = 6; NUMERO = 7; TAG = 8; TEMATICA = 9]",
          "example": 1
        },
        "tipo": {
          "type": "string",
          "description": "Descripción del tipo de pregunta",
          "example": "Estrellas"
        },
        "texto_min": {
          "type": "string",
          "description": "SOLO PARA PREGUNTAS DE TIPO 'PUNTAJE_1_A_5' --> Texto para el valor mínimo de la selección de puntajes",
          "example": "Nada"
        },
        "texto_max": {
          "type": "string",
          "description": "SOLO PARA PREGUNTAS DE TIPO 'PUNTAJE_1_A_5' --> Texto para el valor máximo de la selección de puntajes",
          "example": "Mucho"
        },
        "numero_min": {
          "type": "integer",
          "description": "SOLO PARA PREGUNTAS DE TIPO 'NUMERO' --> Valor mínimo que puede seleccionarse como valor para esta pregunta.",
          "example": 1
        },
        "numero_max": {
          "type": "integer",
          "description": "SOLO PARA PREGUNTAS DE TIPO 'NUMERO' --> Valor máximo que puede seleccionarse como valor para esta pregunta.",
          "example": 100
        },
        "rta_si": {
          "type": "array",
          "description": "SOLO PARA PREGUNTAS DE TIPO 'SI_O_NO' --> Subpreguntas de tipo Texto libre en el caso de que se responda positivamente a la pregunta en cuestión.",
          "items": {
            "$ref": "#/definitions/Subpregunta"
          }
        },
        "rta_no": {
          "type": "array",
          "description": "SOLO PARA PREGUNTAS DE TIPO 'SI_O_NO' --> Subpreguntas de tipo Texto libre en el caso de que se responda negativamente a la pregunta en cuestión.",
          "items": {
            "$ref": "#/definitions/Subpregunta"
          }
        }
      }
    },
    "Subpregunta": {
      "type": "object",
      "properties": {
        "pregunta_encuesta_id": {
          "type": "integer",
          "description": "ID de la encuesta",
          "example": 1
        },
        "grupo_id": {
          "type": "integer",
          "description": "ID del grupo / categoría a la que pertenece la pregunta",
          "example": 1
        },
        "grupo": {
          "type": "string",
          "description": "Descripción del grupo / categoría a la que pertenece la pregunta.",
          "example": "Aspectos generales"
        },
        "excluir_si": {
          "type": "string",
          "description": "Indica en qué casos se debe excluir esta pregunta (por ejemplo, cuando es una materia obligatoria de un único curso).",
          "example": "Nunca"
        },
        "orden": {
          "type": "integer",
          "description": "Relación de orden entre las preguntas de una categoría. La pregunta de orden 0 es la primer pregunta.",
          "example": 0
        },
        "pregunta_id": {
          "type": "integer",
          "description": "ID de la pregunta",
          "example": 1
        },
        "pregunta": {
          "type": "string",
          "description": "Texto que conforma la pregunta",
          "example": "¿Qué te pareció el curso en general?"
        },
        "tipo_num": {
          "type": "integer",
          "description": "Número de tipo de pregunta. Para las subpreguntas este campo siempre es de tipo TEXTO_LIBRE = 1.",
          "example": 1
        },
        "tipo": {
          "type": "string",
          "description": "Descripción del tipo de pregunta",
          "example": "Texto Libre"
        }
      }
    }
  }
}