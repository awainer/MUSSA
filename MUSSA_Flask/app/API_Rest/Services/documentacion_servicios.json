{
  "swagger": "2.0",
  "info": {
    "description": "Los siguientes son los servicios disponibles en la API para MUSSA",
    "version": "1.0.0",
    "title": "MUSSA API REST"
  },
  "basePath": "/v1",
  "tags": [
    {
      "name": "carrera",
      "description": "Acceso a las carreras"
    },
    {
      "name": "materia",
      "description": "Acceso a las materias"
    },
    {
      "name": "curso",
      "description": "Acceso a los cursos"
    },
    {
      "name": "tematica",
      "description": "Acceso a las temáticas"
    },
    {
      "name": "docente",
      "description": "Acceso a los docentes"
    },
    {
      "name": "alumno",
      "description": "Acceso a los alumnos"
    },
    {
      "name": "encuesta",
      "description": "Acceso a la estructura de encuestas. Las encuestas se dividen en tres secciones 1) 'encuesta' --> contiene las preguntas de las encuestas, las agrupaciones por categoría, etc; 2) 'respuestas alumno' --> contiene las respuestas del alumno para una determinada encuesta. Es accesible a través del alumno; 3) 'resultados encuesta' --> contiene las respuestas generales como resultados de las encuestas para un curso o un docente, es accesible a través de resultados encuesta."
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/carrera/{idCarrera}": {
      "get": {
        "tags": [
          "carrera"
        ],
        "summary": "Devuelve la carrera del ID especificado",
        "description": "Devuelve la carrera del ID especificado.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idCarrera",
            "required": true,
            "type": "integer",
            "description": "ID de la carrera buscada."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Carrera"
            }
          },
          "400": {
            "description": "BAD REQUEST. El ID de la carrera debe ser un entero mayor a 0."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "El ID de carrera no existe."
          }
        }
      }
    },
    "/carrera/all": {
      "get": {
        "tags": [
          "carrera"
        ],
        "summary": "Devuelve todas las carreras en base a los filtros enviados",
        "description": "Devuelve una lista con carreras que cumplen con los filtros enviados. Si no se indica ningun filtro devuelve todas las carreras.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "codigo_materia",
            "required": false,
            "type": "integer",
            "description": "Código de la materia para la cual se quiere saber en qué carreras se dicta. Si se quieren obtener todas las carreras en general, no enviar este parámetro."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListaCarreras"
            }
          },
          "400": {
            "description": "BAD REQUEST. Uno o más códigos de carrera no son válidos."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "Uno o más códigos de carrera no existen."
          }
        }
      }
    },
    "/materia/{idMateria}": {
      "get": {
        "tags": [
          "materia"
        ],
        "summary": "Devuelve la materia del ID especificado",
        "description": "Devuelve la materia del ID especificado.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idMateria",
            "required": true,
            "type": "integer",
            "description": "ID de la materia buscada."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Materia"
            }
          },
          "400": {
            "description": "BAD REQUEST. El ID de la materia debe ser un entero mayor a 0."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "El ID de materia no existe."
          }
        }
      }
    },
    "/materia/all": {
      "get": {
        "tags": [
          "materia"
        ],
        "summary": "Devuelve todas las materia que coincidan con los parámetros de búsqueda o todos las masterias si no se envian parámetros.",
        "description": "Devuelve todas las materia que coincidan con los parámetros de búsqueda o todos las masterias si no se envian parámetros.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "codigo_materia",
            "required": false,
            "type": "integer",
            "description": "Código de la materia buscada. Puede enviarse solo los primeros dígitos. Se buscarán todas aquellas materias cuyo código comience con el código enviado."
          },
          {
            "in": "formData",
            "name": "nombre",
            "required": false,
            "type": "integer",
            "description": "Nombre de la materia buscada. Puede enviarse una parte del nombre. Se buscarán todas aquellas materias cuyo nombre contenga el nombre enviado."
          },
          {
            "in": "formData",
            "name": "ids_carreras",
            "required": false,
            "type": "array",
            "description": "Lista de ids de carreras. No enviarlo o enviar una lista vacía implica no filtrar por carrera.",
            "items": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListaMaterias"
            }
          },
          "400": {
            "description": "BAD REQUEST. Uno o más parámetros contienen errores."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "Los ids o códigos enviados no existen."
          }
        }
      }
    },
    "/materia/{idMateria}/correlativas": {
      "get": {
        "tags": [
          "materia"
        ],
        "summary": "Devuelve todas las materias correlativas a la materia del ID especificado.",
        "description": "Devuelve todas las materias correlativas a la materia del ID especificado.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idMateria",
            "required": true,
            "type": "integer",
            "description": "ID de la materia buscada."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListaCorrelativas"
            }
          },
          "400": {
            "description": "BAD REQUEST. El ID de la materia debe ser un entero mayor a 0."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "El ID de materia no existe."
          }
        }
      }
    },
    "/curso/{idCurso}": {
      "get": {
        "tags": [
          "curso"
        ],
        "summary": "Devuelve el curso del ID especificado",
        "description": "Devuelve el curso del ID especificado.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idCurso",
            "required": true,
            "type": "integer",
            "description": "ID del curso buscado."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Curso"
            }
          },
          "400": {
            "description": "BAD REQUEST. El ID del curso debe ser un entero mayor a 0."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "El ID de curso no existe."
          }
        }
      },
      "post": {
        "tags": [
          "curso"
        ],
        "summary": "Modifica el curso del id correspondiente",
        "description": "Modifica los datos del curso del id correspondiente",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idCurso",
            "required": true,
            "type": "integer",
            "description": "El ID del curso a modificar."
          },
          {
            "in": "formData",
            "name": "ids_carreras",
            "required": true,
            "type": "array",
            "description": "Lista de ids de carreras en las que el curso está habilitado.",
            "items": {
              "type": "integer"
            }
          },
          {
            "in": "formData",
            "name": "primer_cuatrimestre",
            "required": true,
            "type": "boolean",
            "description": "Indica si el curso se encuentra habilitado para los primeros cuatrimestres. True en caso de estar habilitado, False en caso contrario."
          },
          {
            "in": "formData",
            "name": "segundo_cuatrimestre",
            "required": true,
            "type": "boolean",
            "description": "Indica si el curso se encuentra habilitado para los segundos cuatrimestres. True en caso de estar habilitado, False en caso contrario."
          },
          {
            "in": "formData",
            "name": "ids_docentes",
            "required": true,
            "type": "array",
            "description": "Lista de ids de docentes que dictan el curso.",
            "items": {
              "type": "integer"
            }
          },
          {
            "in": "formData",
            "name": "horarios",
            "required": true,
            "description": "Lista de horarios que componen la oferta completa del curso. EL horario en el que se dicta el curso es la sumatoria de su oferta horaria.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/HorarioReloj"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BAD REQUEST. Uno o más parámetros no cumplen con las condiciones requeridas."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "El curso del ID especificado no fue encontrado."
          }
        }
      },
      "delete": {
        "tags": [
          "curso"
        ],
        "summary": "Elimina un curso",
        "description": "Elimina un curso",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idCurso",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "El ID del curso a buscar."
          }
        ],
        "responses": {
          "204": {
            "description": "OK. No se devuelven datos"
          },
          "400": {
            "description": "BAD REQUEST. El ID del curso debe ser un entero y mayor que 0."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "El curso del ID especificado no fue encontrado."
          }
        }
      }
    },
    "/curso/all/horarios/uploadPDF": {
      "get": {
        "tags": [
          "curso"
        ],
        "summary": "Carga los horarios del PDF en el sistema dando de alta los cursos correspondientes.",
        "description": "Carga los horarios del PDF en el sistema dando de alta los cursos correspondientes. No es posible cargar horarios para la combinación cuatrimestre / año repetidos ni cargar una combinación cuya fecha sea anterior a la última cargada (ejemplo, no puede cargarse un horario del 1C del 2016 si ya hay un horario cargado del 2017).",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "ruta",
            "required": true,
            "type": "string",
            "description": "Ruta donde se encuentra el archivo PDF a ser cargado."
          }
        ],
        "responses": {
          "204": {
            "description": "OK. No hay contenido"
          },
          "400": {
            "description": "BAD REQUEST. Uno o más parámetros son inválidos."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          }
        }
      }
    },
    "/tematica/{idTematica}": {
      "get": {
        "tags": [
          "tematica"
        ],
        "summary": "Devuelve una tematica por id",
        "description": "Devuelve los datos de un docente",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idTematica",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "El ID de la temática a buscar."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TematicaMateria"
            }
          },
          "400": {
            "description": "BAD REQUEST. El ID de la temática debe ser un entero y mayor que 0."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "La temática del ID especificado no fue encontrada."
          }
        }
      }
    },
    "/tematica/all": {
      "get": {
        "tags": [
          "tematica"
        ],
        "summary": "Devuelve una lista de tematicas",
        "description": "Devuelve una lista con temáticas. Este servicio recibe el filtro en el cual se puede especificar si se quieren recibir solo las verificadas, solo las no verificadas o todas.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "solo_verificadas",
            "required": false,
            "type": "boolean",
            "description": "Si no se envia el filtro se devuelven todas las temáticas. Si se envía en True se devuelven solo aquellas temáticas verificadas por un administrador. Si se envía en False se devuelven solo aquellas temáticas ingresadas por usuarios y no verificadas por un administrador."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListaTematicas"
            }
          },
          "400": {
            "description": "BAD REQUEST. El parámetro solo_verificadas debe ser un booleano"
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          }
        }
      }
    },
    "/docente/{idDocente}": {
      "get": {
        "tags": [
          "docente"
        ],
        "summary": "Devuelve el docente por id",
        "description": "Devuelve los datos de un docente",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idDocente",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "El ID del docente a buscar."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Docente"
            }
          },
          "400": {
            "description": "BAD REQUEST. El ID de docente debe ser un entero y mayor que 0."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "El docente del ID especificado no fue encontrado."
          }
        }
      },
      "post": {
        "tags": [
          "docente"
        ],
        "summary": "Modifica el docente del id correspondiente",
        "description": "Modifica los datos del docente del id correspondiente",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idDocente",
            "required": true,
            "type": "integer",
            "description": "El ID del docente a modificar."
          },
          {
            "in": "formData",
            "name": "apellido",
            "required": true,
            "type": "string",
            "description": "Apellido del docente"
          },
          {
            "in": "formData",
            "name": "nombre",
            "required": true,
            "type": "string",
            "description": "Nombre del docente. Si se desconoce el nombre enviar un string vacío."
          },
          {
            "in": "formData",
            "name": "ids_cursos",
            "required": true,
            "type": "array",
            "description": "Lista de ids de cursos. Si el docente no dicta ningun curso, enviar una lista vacía.",
            "items": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BAD REQUEST. Uno o más parámetros no cumplen con las condiciones requeridas."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "El docente del ID especificado no fue encontrado."
          }
        }
      },
      "delete": {
        "tags": [
          "docente"
        ],
        "summary": "Elimina un docente",
        "description": "Elimina un docente",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idDocente",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "El ID del docente a buscar."
          }
        ],
        "responses": {
          "204": {
            "description": "OK. No se devuelven datos"
          },
          "400": {
            "description": "BAD REQUEST. El ID de docente debe ser un entero y mayor que 0."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "El docente del ID especificado no fue encontrado."
          }
        }
      }
    },
    "/docente/all": {
      "get": {
        "tags": [
          "docente"
        ],
        "summary": "Devuelve todos los docentes con sus datos",
        "description": "Devuelve una lista con los datos de cada docente",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListaDocentes"
            }
          },
          "204": {
            "description": "OK. No hay datos para enviar."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          }
        }
      }
    },
    "/alumno": {
      "get": {
        "tags": [
          "alumno"
        ],
        "summary": "Devuelve el alumno asociado al usuario actual",
        "description": "Devuelve el alumno asociado al usuario actual",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Alumno"
            }
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          }
        }
      },
      "post": {
        "tags": [
          "alumno"
        ],
        "summary": "Modifica el alumno asociado con el usuario actual",
        "description": "Modifica el alumno asociado con el usuario actual",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "padron",
            "required": true,
            "type": "string",
            "description": "Padrón del alumno."
          }
        ],
        "responses": {
          "204": {
            "description": "OK. Sin datos."
          },
          "400": {
            "description": "El padrón no tiene un formato válido o ya existe otro usuario con ese padrón asociado."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          }
        }
      }
    },
    "/alumno/materia/{idMateriaAlumno}": {
      "get": {
        "tags": [
          "alumno"
        ],
        "summary": "Devuelve la materia del alumno por id",
        "description": "Devuelve la materia del alumno por id. La materia puede estar en cualquiera de sus estados, incluido el estado pendiente.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idMateriaAlumno",
            "required": true,
            "type": "integer",
            "description": "El ID de la materia alumno a buscar."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MateriaAlumno"
            }
          },
          "400": {
            "description": "BAD REQUEST. El ID de la materia alumno debe ser un entero y mayor que 0."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "La materia alumno del ID especificado no fue encontrada o no pertenece al alumno del usuario actual."
          }
        }
      },
      "delete": {
        "tags": [
          "alumno"
        ],
        "summary": "Elimina la materia del alumno por id",
        "description": "Modifica la materia como PENDIENTE. De esta forma la materia deja de pertenecer al alumno como materia registrada y pasa a su pull de materias pendientes.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idMateriaAlumno",
            "required": true,
            "type": "integer",
            "description": "El ID de la materia alumno a eliminar."
          }
        ],
        "responses": {
          "204": {
            "description": "OK. No hay contenido."
          },
          "400": {
            "description": "BAD REQUEST. El ID de la materia alumno debe ser un entero y mayor que 0."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "La materia alumno del ID especificado no fue encontrada o no pertenece al alumno del usuario actual."
          }
        }
      }
    },
    "/alumno/materia/all": {
      "get": {
        "tags": [
          "alumno"
        ],
        "summary": "Devuelve todas las materias que tiene registradas el alumno filtradas por estados",
        "description": "Devuelve todas las materias que tiene registradas el alumno filtradas por estados",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "estados",
            "required": false,
            "type": "array",
            "description": "Lista de códigos de estados que pueden tener las materias que se desean obtener. Si la lista está vacía devuelve todas las materias que tiene registradas el alumno. Los estados posibles son: [EN_CURSO = 1, FINAL_PENDIENTE = 2, APROBADA = 4, DESAPROBADA = 5]",
            "items": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListaMateriasAlumno"
            }
          },
          "400": {
            "description": "BAD REQUEST. Los estados no cumplen con el formato correcto."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "Uno o más estados solicitados no existen."
          }
        }
      }
    },
    "/alumno/materia/pendientes": {
      "get": {
        "tags": [
          "alumno"
        ],
        "summary": "Devuelve todas las materias que el alumno tiene como pendientes para cursar",
        "description": "Devuelve todas las materias que el alumno tiene como pendientes para cursar (no es necesario que curse todas pero son todas las que tiene disponibles, tenga o no las correlativas necesarias aprobadas)",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "id_carrera",
            "required": false,
            "type": "integer",
            "description": "Id de la carrera por el que se desea filtrar. Si no se envia no se filtra por carrera."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListaMateriasAlumno"
            }
          },
          "400": {
            "description": "BAD REQUEST. El id de carrera no es válido."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "El id de carrera no existe."
          }
        }
      }
    },
    "/alumno/carrera": {
      "put": {
        "tags": [
          "alumno"
        ],
        "summary": "Agrega la carrera al alumno",
        "description": "Habilita la carrera para el alumno (lo inscribe). Agrega todas las materias de la carrera como materias pendientes para el alumno. No es posible agregar una carrera que ya ha sido añadida anteriormente.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "idCarrera",
            "required": true,
            "type": "integer",
            "description": "Id de la carrera que se desea registrar para el alumno."
          }
        ],
        "responses": {
          "204": {
            "description": "OK. No hay contenido."
          },
          "400": {
            "description": "BAD REQUEST. El id de carrera no es válido o ya pertenece al alumno."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "El id de carrera no existe."
          }
        }
      }
    },
    "/alumno/carrera/{idCarrera}": {
      "put": {
        "tags": [
          "alumno"
        ],
        "summary": "Elimina la carrera segun el id. El alumno deja de estar inscripto en esa carrera.",
        "description": "Elimina la carrera segun el id. El alumno deja de estar inscripto en esa carrera.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idCarrera",
            "required": true,
            "type": "integer",
            "description": "Id de la carrera que se desea eliminar del alumno."
          }
        ],
        "responses": {
          "204": {
            "description": "OK. No hay contenido."
          },
          "400": {
            "description": "BAD REQUEST. El id de carrera no es válido o ya no pertenece al alumno."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "El id de carrera no existe."
          }
        }
      }
    },
    "/alumno/carrera/all": {
      "get": {
        "tags": [
          "alumno"
        ],
        "summary": "Devuelve todas las carreras en las que el alumno está inscripto",
        "description": "Devuelve todas las carreras en las que el alumno está inscripto",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListaCarreras"
            }
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          }
        }
      }
    },
    "/alumno/encuesta/{idEncuestaAlumno}": {
      "get": {
        "tags": [
          "alumno"
        ],
        "summary": "Devuelve la encuesta del alumno por id",
        "description": "Devuelve la encuesta del alumno por id.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idEncuestaAlumno",
            "required": true,
            "type": "integer",
            "description": "El ID de la encuesta de alumno a buscar."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EncuestaAlumno"
            }
          },
          "400": {
            "description": "BAD REQUEST. El ID de la encuesta alumno debe ser un entero y mayor que 0."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "La encuesta alumno del ID especificado no fue encontrada o no pertenece al alumno del usuario actual."
          }
        }
      },
      "post": {
        "tags": [
          "alumno"
        ],
        "summary": "Marca como finalizada la encuesta del id correspondiente.",
        "description": "Marca como finalizada la encuesta del id correspondiente.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idEncuestaAlumno",
            "required": true,
            "type": "integer",
            "description": "El ID de la encuesta de alumno a buscar."
          },
          {
            "in": "formData",
            "name": "finalizada",
            "required": true,
            "type": "boolean",
            "description": "Enviar en True. La encuesta quedará como finalizada."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. No hay datos."
          },
          "400": {
            "description": "BAD REQUEST. El ID de la encuesta alumno debe ser un entero y mayor que 0. El campo finalizada debe ser un booleano."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "La encuesta alumno del ID especificado no fue encontrada o no pertenece al alumno del usuario actual."
          },
          "405": {
            "description": "La encuesta alumno del ID especificado ya está finalizada."
          }
        }
      }
    },
    "/alumno/encuesta/{idEncuestaAlumno}/respuestas": {
      "get": {
        "tags": [
          "alumno"
        ],
        "summary": "Devuelve todas las respuestas del alumno para una encuesta en particular. Se puede filtrar por ids de preguntas específicas si se desea en lugar de obtener todas las respuestas.",
        "description": "Devuelve todas las respuestas del alumno para una encuesta en particular. Se puede filtrar por ids de preguntas específicas si se desea en lugar de obtener todas las respuestas.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idEncuestaAlumno",
            "required": true,
            "type": "integer",
            "description": "El ID de la encuesta de alumno a buscar."
          },
          {
            "in": "formData",
            "name": "ids_preguntas",
            "required": true,
            "type": "array",
            "description": "Ids de preguntas por las que se desa filtrar las respuestas de la encuesta del alumno.",
            "items": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListaRespuestasEncuestaAlumno"
            }
          },
          "400": {
            "description": "BAD REQUEST. El ID de la encuesta alumno debe ser un entero y mayor que 0. Uno o más IDs de preguntas son inválidos."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "La encuesta alumno del ID especificado no fue encontrada o no pertenece al alumno del usuario actual. Uno o más ids de preguntas no existen."
          }
        }
      }
    },
    "/alumno/encuesta/{idEncuestaAlumno}/completa": {
      "get": {
        "tags": [
          "alumno"
        ],
        "summary": "Devuelve true o false dependiendo de si todos los pasos de la encuesta del alumno por id están completos.",
        "description": "Devuelve true o false dependiendo de si todos los pasos de la encuesta del alumno por id están completos.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idEncuestaAlumno",
            "required": true,
            "type": "integer",
            "description": "El ID de la encuesta de alumno a buscar."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EncuestaAlumnoEstaCompleta"
            }
          },
          "400": {
            "description": "BAD REQUEST. El ID de la encuesta alumno debe ser un entero y mayor que 0."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "La encuesta alumno del ID especificado no fue encontrada o no pertenece al alumno del usuario actual."
          }
        }
      }
    },
    "/alumno/encuesta/all": {
      "get": {
        "tags": [
          "alumno"
        ],
        "summary": "Devuelve todas las encuesta del alumno permitiendo filtrar aquellas que ya están o no finalizadas.",
        "description": "Devuelve todas las encuesta del alumno permitiendo filtrar aquellas que ya están o no finalizadas.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "finalizada",
            "required": false,
            "type": "boolean",
            "description": "Si se desea filtrar solo aquellas encuestas que están finalizadas enviar en True. Si se desea filtrar aquellas encuestas que no están finalizadas enviar en False. Si no se desea aplicar filtros no enviar el parámetro."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListaEncuestaAlumno"
            }
          },
          "400": {
            "description": "BAD REQUEST. El campo finalizada no es válido."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          }
        }
      }
    },
    "/encuesta/preguntas": {
      "get": {
        "tags": [
          "encuesta"
        ],
        "summary": "Devuelve las preguntas de la encuesta.",
        "description": "Devuelve las preguntas de la encuesta. Existe una única encuesta por lo que no es requerido el ID de la misma.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "categorias",
            "required": true,
            "type": "array",
            "description": "Lista de Categorías / Grupos en los que se agrupan las preguntas de encuestas que se quieren buscar. Las categorías son las siguientes [GRUPO_ENCUESTA_GENERAL = 0, GRUPO_ENCUESTA_CONTENIDO = 1, GRUPO_ENCUESTA_CLASES = 2, GRUPO_ENCUESTA_EXAMENES = 3, GRUPO_ENCUESTA_DOCENTES = 4]",
            "items": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListaPreguntas"
            }
          },
          "400": {
            "description": "BAD REQUEST. Una o más categorías no son números."
          },
          "401": {
            "description": "La información de autorización no fue enviada o es inválida."
          },
          "404": {
            "description": "Una o más categorías enviadas no existen."
          }
        }
      }
    }
  },
  "definitions": {
    "ListaMaterias": {
      "type": "object",
      "properties": {
        "materias": {
          "type": "array",
          "description": "Lista de materias",
          "items": {
            "$ref": "#/definitions/Materia"
          }
        }
      }
    },
    "Materia": {
      "type": "object",
      "properties": {
        "id_materia": {
          "type": "integer",
          "description": "ID de la materia.",
          "example": 1
        },
        "codigo": {
          "type": "string",
          "description": "Código de la materia.",
          "example": "7540"
        },
        "nombre": {
          "type": "string",
          "description": "Nombre de la materia.",
          "example": "Algoritmos y Programación I"
        },
        "objetivos": {
          "type": "string",
          "description": "Objetivos de la materia.",
          "example": "Enseñar los fundamentos básicos de la programación."
        },
        "creditos": {
          "type": "integer",
          "description": "Créditos que otorga la materia.",
          "example": 6
        },
        "creditos_minimos_para_cursarla": {
          "type": "integer",
          "description": "Créditos mínimos que requiere la materia para ser cursada. Algunas materias en lugar de tener otras materias como correlativas solo tienen una restricción de créditos mínimos para ser cursadas. Salvo para esas materias puntuales que el valor será mayor a 0, para la mayoría el valor será exactamente 0.",
          "example": 0
        },
        "tipo_materia_id": {
          "type": "integer",
          "description": "ID del tipo de materia.",
          "example": 2
        },
        "tipo_materia": {
          "type": "string",
          "description": "Descripción del tipo de materia. El tipo de materia indica por ejemplo si es una materia electiva u obligatoria.",
          "example": "OBLIGATORIA"
        },
        "carrera_id": {
          "type": "integer",
          "description": "ID de la carrera a la que pertenece la materia.",
          "example": 1
        },
        "carrera": {
          "type": "string",
          "description": "Descripción completa de la carrera.",
          "example": "09 - Licenciatura en Análisis de Sistemas (Plan 1986)"
        }
      }
    },
    "ListaCorrelativas": {
      "type": "object",
      "properties": {
        "correlativas": {
          "type": "array",
          "description": "Lista de materias correlativas",
          "items": {
            "$ref": "#/definitions/Materia"
          }
        }
      }
    },
    "Curso": {
      "type": "object",
      "properties": {
        "id_curso": {
          "type": "integer",
          "description": "ID del curso.",
          "example": 1
        },
        "codigo_curso": {
          "type": "string",
          "description": "Código del curso.",
          "example": "2A"
        },
        "codigo_materia": {
          "type": "string",
          "description": "Código de materia a la que pertenece el curso",
          "example": "7540"
        },
        "se_dicta_primer_cuatri": {
          "type": "boolean",
          "description": "Indica si el curso se dicta los primeros cuatrimestres",
          "example": true
        },
        "se_dicta_segundo_cuatri": {
          "type": "boolean",
          "description": "Indica si el curso se dicta los segundos cuatrimestres",
          "example": true
        },
        "cuatrimestre": {
          "type": "string",
          "description": "Texto que indica en qué cuatrimestres este curso es dictado",
          "example": "Ambos cuatrimestres"
        },
        "carreras": {
          "type": "array",
          "description": "Lista de carreras a las que pertenece el curso. Un curso puede dictarse para materias de igual código en diferentes carreras.",
          "items": {
            "$ref": "#/definitions/Carrera"
          }
        },
        "horarios": {
          "type": "array",
          "description": "Lista de horarios en las que es dictado el curso. La composición de estos horarios es la carga horaria completa del curso.",
          "items": {
            "$ref": "#/definitions/Horario"
          }
        },
        "docentes": {
          "type": "string",
          "description": "Nombres de los docentes del curso concatenados en un único string.",
          "example": "Essaya-Wainer-Woites"
        },
        "datos_docentes": {
          "type": "array",
          "description": "Lista de datos completos de los docentes que dicatn el curso.",
          "items": {
            "$ref": "#/definitions/Docente"
          }
        },
        "puntaje": {
          "type": "number",
          "description": "Puntaje del curso en base a las encuestas. El puntaje es 0 si no hay encuestas. Si hay encuestas para el curso se calcula como la cantidad de encuestas completas sobre el puntaje total de encuestas.",
          "example": 4.5
        },
        "cantidad_encuestas_completas": {
          "type": "integer",
          "description": "Total de encuestas completas y finalizadas para el curso.",
          "example": 10
        },
        "puntaje_total_encuestas": {
          "type": "integer",
          "description": "Sumatoria de los puntajes de las encuestas completas y finalizadas para el curso.",
          "example": 450
        }
      }
    },
    "Docente": {
      "type": "object",
      "properties": {
        "id_docente": {
          "type": "integer",
          "description": "ID del docente.",
          "example": 1
        },
        "apellido": {
          "type": "string",
          "description": "Apellido del docente.",
          "example": "Essaya"
        },
        "nombre": {
          "type": "string",
          "description": "Nombre del docente.",
          "example": "Diego"
        },
        "nombre_completo": {
          "type": "string",
          "description": "Nombre completo del docente. Si solo tiene apellido, es este valor, si además tiene nombre es 'Apellido, Nombre'",
          "example": "Essaya, Diego"
        },
        "materias_que_dicta": {
          "type": "array",
          "description": "Lista de materias que dicta el docente en las diferentes carreras. Si la materia que dicta la dicta en dos carreras, son dos elementos diferentes en la lista.",
          "items": {
            "$ref": "#/definitions/MateriasDocente"
          }
        }
      }
    },
    "MateriasDocente": {
      "type": "object",
      "properties": {
        "nombre": {
          "type": "string",
          "description": "Nombre de la materia.",
          "example": "7540 - Algoritmos y Programación I"
        },
        "id_carrera": {
          "type": "integer",
          "description": "ID de la carrera a la que pertenece la materia.",
          "example": 1
        },
        "carrera": {
          "type": "string",
          "description": "Descripcion de la carrera (codigo, nombre y plan) a la que pertenece la materia.",
          "example": "10 - Ingeniería en Informática (Plan 1986)"
        }
      }
    },
    "ListaDocentes": {
      "type": "object",
      "properties": {
        "docentes": {
          "type": "array",
          "description": "Lista de docentes",
          "items": {
            "$ref": "#/definitions/Docente"
          }
        }
      }
    },
    "TematicaMateria": {
      "type": "object",
      "properties": {
        "id_tematica": {
          "type": "integer",
          "description": "ID de la temática.",
          "example": 1
        },
        "tematica": {
          "type": "string",
          "description": "Descripción de la temática",
          "example": "DATA MINING"
        },
        "verificado": {
          "type": "boolean",
          "description": "Indica si la temática ha sido verificada o ingresada por un administrador (True) o si ha sido ingresada por el usuario (False).",
          "example": true
        }
      }
    },
    "ListaTematicas": {
      "type": "object",
      "properties": {
        "tematicas": {
          "type": "array",
          "description": "Lista de temáticas",
          "items": {
            "$ref": "#/definitions/TematicaMateria"
          }
        }
      }
    },
    "Carrera": {
      "type": "object",
      "properties": {
        "id_carrera": {
          "type": "integer",
          "description": "ID de la carrera",
          "example": 1
        },
        "codigo": {
          "type": "integer",
          "description": "Codigo de la carrera",
          "example": 10
        },
        "nombre": {
          "type": "string",
          "description": "Nombre de la carrera",
          "example": "Ingeniería en Informática"
        },
        "plan": {
          "type": "string",
          "description": "Plan de la carrera",
          "example": "1986"
        },
        "descripcion": {
          "type": "string",
          "description": "Descripción completa de la carrera. El formato es 'codigo - nombre de la carrera (Plan año)'",
          "example": "09 - Licenciatura en Análisis de Sistemas (Plan 1986)"
        },
        "orientaciones": {
          "type": "array",
          "description": "Lista de orientaciones que posee la carrera. Si no tiene orientaciones la lista está vacía.",
          "items": {
            "$ref": "#/definitions/Orientacion"
          }
        },
        "trabajos_finales_carrera": {
          "type": "array",
          "description": "Lista de trabajos finales que posee la carrera. Si no tiene ninguno la lista está vacía.",
          "items": {
            "$ref": "#/definitions/TrabajoFinal"
          }
        }
      }
    },
    "ListaCarreras": {
      "type": "object",
      "properties": {
        "carreras": {
          "type": "array",
          "description": "Lista de carreras",
          "items": {
            "$ref": "#/definitions/Carrera"
          }
        }
      }
    },
    "Orientacion": {
      "type": "object",
      "properties": {
        "descripcion": {
          "type": "string",
          "description": "Descripcion completa de la orientacion",
          "example": "Gestión Industrial de Sistemas"
        },
        "clave_reducida": {
          "type": "string",
          "description": "Clave utilizada para identificar la orientacion",
          "example": "GESTION"
        }
      }
    },
    "TrabajoFinal": {
      "type": "object",
      "properties": {
        "descripcion": {
          "type": "string",
          "description": "Descripcion completa del tipo de trabajo final",
          "example": "Trabajo Profesional"
        },
        "codigo": {
          "type": "string",
          "description": "Clave utilizada para identificar el tipo de trabajo final",
          "example": "TP_PROFESIONAL"
        }
      }
    },
    "Horario": {
      "type": "object",
      "properties": {
        "dia": {
          "type": "string",
          "description": "Dia de la semana",
          "example": "LUNES"
        },
        "hora_desde": {
          "type": "string",
          "description": "Horario de inicio",
          "example": "07:30"
        },
        "hora_hasta": {
          "type": "string",
          "description": "Horario de fin",
          "example": "12:00"
        }
      }
    },
    "ListaPreguntas": {
      "type": "object",
      "properties": {
        "preguntas": {
          "type": "array",
          "description": "Lista de preguntas",
          "items": {
            "$ref": "#/definitions/Pregunta"
          }
        }
      }
    },
    "Pregunta": {
      "type": "object",
      "properties": {
        "pregunta_encuesta_id": {
          "type": "integer",
          "description": "ID de la encuesta",
          "example": 1
        },
        "grupo_id": {
          "type": "integer",
          "description": "ID del grupo / categoría a la que pertenece la pregunta",
          "example": 1
        },
        "grupo": {
          "type": "string",
          "description": "Descripción del grupo / categoría a la que pertenece la pregunta.",
          "example": "Aspectos generales"
        },
        "excluir_si": {
          "type": "string",
          "description": "Indica en qué casos se debe excluir esta pregunta (por ejemplo, cuando es una materia obligatoria de un único curso).",
          "example": "Nunca"
        },
        "orden": {
          "type": "integer",
          "description": "Relación de orden entre las preguntas de una categoría. La pregunta de orden 0 es la primer pregunta.",
          "example": 0
        },
        "pregunta_id": {
          "type": "integer",
          "description": "ID de la pregunta",
          "example": 1
        },
        "pregunta": {
          "type": "string",
          "description": "Texto que conforma la pregunta",
          "example": "¿Qué te pareció el curso en general?"
        },
        "tipo_num": {
          "type": "integer",
          "description": "Número de tipo de pregunta. Los tipos de preguntas pueden ser [PUNTAJE_1_A_5 = 0; TEXTO_LIBRE = 1; SI_NO = 2; HORARIO = 3; DOCENTE = 4; CORRELATIVA = 5; ESTRELLAS = 6; NUMERO = 7; TAG = 8; TEMATICA = 9]",
          "example": 1
        },
        "tipo": {
          "type": "string",
          "description": "Descripción del tipo de pregunta",
          "example": "Estrellas"
        },
        "texto_min": {
          "type": "string",
          "description": "SOLO PARA PREGUNTAS DE TIPO 'PUNTAJE_1_A_5' --> Texto para el valor mínimo de la selección de puntajes",
          "example": "Nada"
        },
        "texto_max": {
          "type": "string",
          "description": "SOLO PARA PREGUNTAS DE TIPO 'PUNTAJE_1_A_5' --> Texto para el valor máximo de la selección de puntajes",
          "example": "Mucho"
        },
        "numero_min": {
          "type": "integer",
          "description": "SOLO PARA PREGUNTAS DE TIPO 'NUMERO' --> Valor mínimo que puede seleccionarse como valor para esta pregunta.",
          "example": 1
        },
        "numero_max": {
          "type": "integer",
          "description": "SOLO PARA PREGUNTAS DE TIPO 'NUMERO' --> Valor máximo que puede seleccionarse como valor para esta pregunta.",
          "example": 100
        },
        "rta_si": {
          "type": "array",
          "description": "SOLO PARA PREGUNTAS DE TIPO 'SI_O_NO' --> Subpreguntas de tipo Texto libre en el caso de que se responda positivamente a la pregunta en cuestión.",
          "items": {
            "$ref": "#/definitions/Subpregunta"
          }
        },
        "rta_no": {
          "type": "array",
          "description": "SOLO PARA PREGUNTAS DE TIPO 'SI_O_NO' --> Subpreguntas de tipo Texto libre en el caso de que se responda negativamente a la pregunta en cuestión.",
          "items": {
            "$ref": "#/definitions/Subpregunta"
          }
        }
      }
    },
    "Subpregunta": {
      "type": "object",
      "properties": {
        "pregunta_encuesta_id": {
          "type": "integer",
          "description": "ID de la encuesta",
          "example": 1
        },
        "grupo_id": {
          "type": "integer",
          "description": "ID del grupo / categoría a la que pertenece la pregunta",
          "example": 1
        },
        "grupo": {
          "type": "string",
          "description": "Descripción del grupo / categoría a la que pertenece la pregunta.",
          "example": "Aspectos generales"
        },
        "excluir_si": {
          "type": "string",
          "description": "Indica en qué casos se debe excluir esta pregunta (por ejemplo, cuando es una materia obligatoria de un único curso).",
          "example": "Nunca"
        },
        "orden": {
          "type": "integer",
          "description": "Relación de orden entre las preguntas de una categoría. La pregunta de orden 0 es la primer pregunta.",
          "example": 0
        },
        "pregunta_id": {
          "type": "integer",
          "description": "ID de la pregunta",
          "example": 1
        },
        "pregunta": {
          "type": "string",
          "description": "Texto que conforma la pregunta",
          "example": "¿Qué te pareció el curso en general?"
        },
        "tipo_num": {
          "type": "integer",
          "description": "Número de tipo de pregunta. Para las subpreguntas este campo siempre es de tipo TEXTO_LIBRE = 1.",
          "example": 1
        },
        "tipo": {
          "type": "string",
          "description": "Descripción del tipo de pregunta",
          "example": "Texto Libre"
        }
      }
    },
    "HorarioReloj": {
      "type": "object",
      "properties": {
        "dia": {
          "type": "string",
          "description": "Dia de la semana (LUNES; MARTES; MIERCOLES; JUEVES; VIERNES; SABADO)",
          "example": "LUNES"
        },
        "hora_desde": {
          "type": "string",
          "description": "Hora de inicio del horario.",
          "example": "07:30"
        },
        "hora_hasta": {
          "type": "string",
          "description": "Hora de finalización del horario.",
          "example": "12:00"
        }
      }
    },
    "Alumno": {
      "type": "object",
      "properties": {
        "padron": {
          "type": "string",
          "description": "Padrón del alumno. Si el alumno no tiene un padrón asociado, devuelve un string vacío.",
          "example": "93274"
        }
      }
    },
    "ListaMateriasAlumno": {
      "type": "object",
      "properties": {
        "materias_alumno": {
          "type": "array",
          "description": "Lista de materias alumno",
          "items": {
            "$ref": "#/definitions/MateriaAlumno"
          }
        }
      }
    },
    "MateriaAlumno": {
      "type": "object",
      "properties": {
        "id_materia_alumno": {
          "type": "integer",
          "description": "Id de la materia alumno",
          "example": 1
        },
        "id_materia": {
          "type": "integer",
          "description": "Id de la materia",
          "example": 5
        },
        "codigo": {
          "type": "string",
          "description": "Código de la materia",
          "example": 7540
        },
        "nombre": {
          "type": "string",
          "description": "Nombre de la materia",
          "example": "Algoritmos y Programación I"
        },
        "id_carrera": {
          "type": "integer",
          "description": "Id de la carrera a la que pertenece la materia",
          "example": 1
        },
        "carrera": {
          "type": "string",
          "description": "Nombre de la carrera",
          "example": "10 - Ingeniería en Informática (Plan 1986)"
        },
        "id_curso": {
          "type": "integer",
          "description": "Id del curso en el que está/estuvo inscripto el alumno para esa materia. Si no hay un curso designado, el valor es -1.",
          "example": 7
        },
        "curso": {
          "type": "string",
          "description": "Nombre del curso. Si no hay un curso elegido es \"Sin designar\"",
          "example": "2A | Wachenchauzer-Essaya"
        },
        "estado": {
          "type": "string",
          "description": "Descripción del estado de la materia",
          "example": "Aprobada"
        },
        "aprobacion_cursada": {
          "type": "string",
          "description": "Si corresponde, indica el cuatrimestre y año en que fue aprobada la cursada de la materia (regularizada).",
          "example": "1C / 2016"
        },
        "calificacion": {
          "type": "string",
          "description": "Si corresponde, calificación final de la materia.",
          "example": "8"
        },
        "fecha_aprobacion": {
          "type": "string",
          "description": "Si corresponde, fecha en la que fue aprobada/desaprobada la materia (ya sea por final, coloquio, etc)",
          "example": "20/08/2017"
        },
        "acta_o_resolucion": {
          "type": "string",
          "description": "Si corresponde, acta o resolución en la que fue asentada la aprobación/desaprobación de la materia.",
          "example": "89565-556"
        },
        "forma_aprobacion_materia": {
          "type": "string",
          "description": "Si corresponde, forma en la que fue aprobada/desaprobada la materia.",
          "example": "Examen"
        }
      }
    },
    "ListaEncuestaAlumno": {
      "type": "object",
      "properties": {
        "encuestas": {
          "type": "array",
          "description": "Lista de encuestas alumno",
          "items": {
            "$ref": "#/definitions/EncuestaAlumno"
          }
        }
      }
    },
    "EncuestaAlumno": {
      "type": "object",
      "properties": {
        "id_encuesta_alumno": {
          "type": "integer",
          "description": "Id de la encuesta alumno",
          "example": 1
        },
        "alumno_id": {
          "type": "integer",
          "description": "Id del alumno al que pertenece la encuesta",
          "example": 2
        },
        "materia_alumno_id": {
          "type": "integer",
          "description": "Id de la materia alumno",
          "example": 5
        },
        "carrera": {
          "$ref": "#/definitions/Carrera"
        },
        "materia": {
          "$ref": "#/definitions/Materia"
        },
        "curso": {
          "$ref": "#/definitions/Curso"
        },
        "cuatrimestre_aprobacion_cursada": {
          "type": "integer",
          "description": "Curso en el que fue aprobada la cursada de la materia a la que pertenece la encuesta",
          "example": 1
        },
        "anio_aprobacion_cursada": {
          "type": "integer",
          "description": "Año en el que fue aprobada la cursada de la materia a la que pertence la encuesta",
          "example": 2016
        },
        "fecha_aprobacion": {
          "type": "string",
          "description": "Descripcion de fecha y cuatrimestre en la que fue aprobada la materia a la que pertence la encuesta",
          "example": "1C / 2016"
        },
        "finalizada": {
          "type": "boolean",
          "description": "Indica si la encuesta ya fue finalizada (no es posible seguir editandola porque ya han sido enviadas las respuestas para que sean públicas)",
          "example": true
        }
      }
    },
    "EncuestaAlumnoEstaCompleta": {
      "type": "object",
      "properties": {
        "esta_completa": {
          "type": "boolean",
          "description": "True si todos los pasos de la encuesta están completos, False en caso contrario.",
          "example": true
        }
      }
    },
    "ListaRespuestasEncuestaAlumno": {
      "type": "object",
      "properties": {
        "respuestas_encuestas": {
          "type": "object",
          "description": "Diccionario de respuestas de la encuesta del alumno. La clave del diccionario es el id de la pregunta y como respuesta tiene la estructura que corresponda a la respuesta. Depende del id de la pregunta el tipo de datos en la respuesta que se espera. En los ejemplos se coloca uno de cada tipo de respuesta posible.",
          "additionalProperties": {
            "$ref": "#/definitions/RespuestaEncuestaAlumno"
          },
          "example": {
            "1": {
              "puntaje": 5
            },
            "2": {
              "texto": "Esto es un texto de respuesta"
            },
            "3": {
              "respuesta": true
            },
            "4": {
              "horarios": [
                {
                  "dia": "LUNES",
                  "hora_desde": "07:30",
                  "hora_hasta": "12:00"
                }
              ]
            },
            "5": {
              "comentarios_docentes": {
                "id_docente": 1,
                "apellido": "Essaya",
                "nombre": "Diego",
                "nombre_completo": "Essaya, Diego",
                "comentario": "Este es el texto del comentario realizado."
              }
            },
            "6": {
              "materias_correlativas": [
                {
                  "id_materia": 1,
                  "codigo": "7540",
                  "nombre": "Algoritmos  Programación I"
                }
              ]
            },
            "7": {
              "estrellas": 3
            },
            "8": {
              "numero": 25
            },
            "9": {
              "palabras_clave": [
                {
                  "id_palabra_clave": 1,
                  "palabra_clave": "ALGORITMOS"
                }
              ]
            },
            "10": {
              "tematicas": [
                {
                  "id_tematica": 1,
                  "tematica": "DATA MINING"
                }
              ]
            }
          }
        }
      }
    },
    "RespuestaEncuestaAlumno": {
      "type": "object",
      "properties": {
        "puntaje": {
          "type": "integer",
          "description": "Puntaje para respuestas de tipo PUNTAJE_DE_1_A_5.",
          "example": 5
        },
        "texto": {
          "type": "string",
          "description": "Texto para respuestas de tipo TEXTO_LIBRE.",
          "example": "Este es un texto de respuesta."
        },
        "respuesta": {
          "type": "boolean",
          "description": "Respuesta True/False para respuestas de tipo SI_O_NO.",
          "example": true
        },
        "horarios": {
          "type": "array",
          "description": "Lista de horarios para respuestas de tipo HORARIOS.",
          "items": {
            "$ref": "#/definitions/Horario"
          }
        },
        "comentarios_docentes": {
          "type": "array",
          "description": "Lista de comentarios y los ids de docentes para respuestas de tipo DOCENTES.",
          "items": {
            "$ref": "#/definitions/ComentarioDocente"
          }
        },
        "materias_correlativas": {
          "type": "array",
          "description": "Lista de comentarios y los ids de docentes para respuestas de tipo DOCENTES.",
          "items": {
            "$ref": "#/definitions/Correlativa"
          }
        },
        "estrellas": {
          "type": "integer",
          "description": "Estrellas para respuestas de tipo ESTRELLA.",
          "example": 3
        },
        "numero": {
          "type": "integer",
          "description": "Numero para respuestas de tipo NUMERO.",
          "example": 25
        },
        "palabras_clave": {
          "type": "array",
          "description": "Lista de palabras clave para respuestas de tipo TAG",
          "items": {
            "$ref": "#/definitions/RespuestaPalabraClave"
          }
        },
        "tematicas": {
          "type": "array",
          "description": "Lista de tematicas para respuestas de tipo TEMATICA",
          "items": {
            "$ref": "#/definitions/RespuestaTematica"
          }
        }
      }
    },
    "RespuestaPalabraClave": {
      "type": "object",
      "properties": {
        "id_palabra_clave": {
          "type": "integer",
          "description": "ID de la palabra clave.",
          "example": 1
        },
        "palabra_clave": {
          "type": "string",
          "description": "Descripción de la palabra clave",
          "example": "ALGORITMOS"
        }
      }
    },
    "RespuestaTematica": {
      "type": "object",
      "properties": {
        "id_tematica": {
          "type": "integer",
          "description": "ID de la temática.",
          "example": 1
        },
        "tematica": {
          "type": "string",
          "description": "Descripción de la temática",
          "example": "DATA MINING"
        }
      }
    },
    "ComentarioDocente": {
      "type": "object",
      "properties": {
        "id_docente": {
          "type": "integer",
          "description": "Id del docente al que corresponde el comentario.",
          "example": 1
        },
        "apellido": {
          "type": "string",
          "description": "Apellido del docente al que corresponde el comentario.",
          "example": "Essaya"
        },
        "nombre": {
          "type": "string",
          "description": "Nombre del docente al que corresponde el comentario.",
          "example": "Diego"
        },
        "nombre_completo": {
          "type": "string",
          "description": "Nombre completo del docente al que corresponde el comentario.",
          "example": "Essaya, Diego"
        },
        "comentario": {
          "type": "string",
          "description": "Comentario que se realizó para el docente",
          "example": "Este es el texto del comentario realizado."
        }
      }
    },
    "Correlativa": {
      "type": "object",
      "properties": {
        "id_materia": {
          "type": "integer",
          "description": "Id de la materia",
          "example": 1
        },
        "codigo": {
          "type": "string",
          "description": "Codigo de la materia",
          "example": "7540"
        },
        "nombre": {
          "type": "string",
          "description": "Nombre de la materia",
          "example": "Algoritmos y Programación I"
        }
      }
    }
  }
}