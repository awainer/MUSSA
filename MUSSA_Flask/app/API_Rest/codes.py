#Para ver las explicaciones de cada codigo: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html

#The client SHOULD continue by sending the remainder of the request or,
#if the request has already been completed, ignore this response
CONTINUE = 100

#The server understands and is willing to comply with the client's request,
#via the Upgrade message header field (section 14.42), for a change in the
#application protocol being used on this connection. The server will switch
#protocols to those defined by the response's Upgrade header field immediately
#after the empty line which terminates the 101 response.
SWITCHING_PROTOCOL = 101

#The request has succeeded. The information returned with the response is
#dependent on the method used in the request
SUCCESS_OK = 200

#The request has been fulfilled and resulted in a new resource being created.
#The newly created resource can be referenced by the URI(s) returned in the
#entity of the response, with the most specific URI for the resource given
#by a Location header field. The response SHOULD include an entity containing
#a list of resource characteristics and location(s) from which the user or user
#agent can choose the one most appropriate.
SUCCESS_CREATED = 201

#he request has been accepted for processing, but the processing has not been
#completed. The request might or might not eventually be acted upon, as it
#might be disallowed when processing actually takes place. There is no facility
#for re-sending a status code from an asynchronous operation such as this.
SUCCESS_ACCEPTED = 202

#The returned metainformation in the entity-header is not the definitive set
#as available from the origin server, but is gathered from a local or a
#third-party copy. The set presented MAY be a subset or superset of the original
#version.
SUCCESS_NON_AUTHORITATIVE_INFORMATION = 203

#The server has fulfilled the request but does not need to return an entity-body,
#and might want to return updated metainformation. The response MAY include new
#or updated metainformation in the form of entity-headers, which if present SHOULD
#be associated with the requested variant.
SUCCESS_NO_CONTENT = 204

#The server has fulfilled the request and the user agent SHOULD reset the document
#view which caused the request to be sent. This response is primarily intended to
#allow input for actions to take place via user input, followed by a clearing of the
#form in which the input is given so that the user can easily initiate another input
#action. The response MUST NOT include an entity.
SUCCESS_RESET_CONTENT = 205

#The server has fulfilled the partial GET request for the resource. The request MUST
#have included a Range header field indicating the desired range, and MAY have
#included an If-Range header field to make the request conditional.
SUCCESS_PARTIAL_CONTENT = 206

#The requested resource corresponds to any one of a set of representations, each with
#its own specific location, and agent- driven negotiation information is being provided
#so that the user (or user agent) can select a preferred representation and redirect
#its request to that location.
REDIRECTION_MULTIPLE_CHOICES = 300

#The requested resource has been assigned a new permanent URI and any future references
#to this resource SHOULD use one of the returned URIs. Clients with link editing
#capabilities ought to automatically re-link references to the Request-URI to one or more
#of the new references returned by the server, where possible. This response is cacheable
#unless indicated otherwise.
REDIRECTION_MOVED_PERMANENTLY = 301

#The requested resource resides temporarily under a different URI. Since the redirection
#might be altered on occasion, the client SHOULD continue to use the Request-URI for
#future requests. This response is only cacheable if indicated by a Cache-Control or
#Expires header field.
REDIRECTION_FOUND = 302

#The response to the request can be found under a different URI and SHOULD be retrieved
#using a GET method on that resource. This method exists primarily to allow the output
#of a POST-activated script to redirect the user agent to a selected resource. The new
#URI is not a substitute reference for the originally requested resource. The 303 response
#MUST NOT be cached, but the response to the second (redirected) request might be cacheable.
REDIRECTION_SEE_OTHER = 303

#If the client has performed a conditional GET request and access is allowed, but the
#document has not been modified, the server SHOULD respond with this status code. The
#304 response MUST NOT contain a message-body, and thus is always terminated by the first
#empty line after the header fields.
REDIRECTION_NOT_MODIFIED = 304

#The requested resource MUST be accessed through the proxy given by the Location field.
#The Location field gives the URI of the proxy. The recipient is expected to repeat this
#single request via the proxy. 305 responses MUST only be generated by origin servers.
REDIRECTION_USE_PROXY = 305

#The requested resource resides temporarily under a different URI. Since the redirection
#MAY be altered on occasion, the client SHOULD continue to use the Request-URI for future
#requests. This response is only cacheable if indicated by a Cache-Control or Expires
#header field.
REDIRECTION_TEMPORARY_REDIRECT = 307

#The request could not be understood by the server due to malformed syntax. The client
#SHOULD NOT repeat the request without modifications.
CLIENT_ERROR_BAD_REQUEST = 400

#The request requires user authentication. The response MUST include a WWW-Authenticate
#header field containing a challenge applicable to the requested resource. The client
#MAY repeat the request with a suitable Authorization header field
CLIENT_ERROR_UNAUTHORIZED = 401

#The server understood the request, but is refusing to fulfill it. Authorization will
#not help and the request SHOULD NOT be repeated. If the request method was not HEAD
#and the server wishes to make public why the request has not been fulfilled, it SHOULD
#describe the reason for the refusal in the entity. If the server does not wish to make
#this information available to the client, the status code 404 (Not Found) can be used instead.
CLIENT_ERROR_FORBIDDEN = 403

#The server has not found anything matching the Request-URI. No indication is given of
#whether the condition is temporary or permanent. The 410 (Gone) status code SHOULD be
#used if the server knows, through some internally configurable mechanism, that an old
#resource is permanently unavailable and has no forwarding address. This status code is
#commonly used when the server does not wish to reveal exactly why the request has been
#refused, or when no other response is applicable.
CLIENT_ERROR_NOT_FOUND = 404

#The method specified in the Request-Line is not allowed for the resource identified
#by the Request-URI. The response MUST include an Allow header containing a list of
#valid methods for the requested resource.
CLIENT_ERROR_METHOD_NOT_ALLOWED = 405

#The resource identified by the request is only capable of generating response entities
#which have content characteristics not acceptable according to the accept headers
#sent in the request.
CLIENT_ERROR_NOT_ACCEPTABLE = 406

#This code is similar to 401 (Unauthorized), but indicates that the client must first
#authenticate itself with the proxy. 
CLIENT_ERROR_PROXY_AUTHENTICATION_REQUIRED = 407

#The client did not produce a request within the time that the server was prepared to
#wait. The client MAY repeat the request without modifications at any later time.
CLIENT_ERROR_REQUEST_TIMEOUT = 408

#The request could not be completed due to a conflict with the current state of the
#resource. This code is only allowed in situations where it is expected that the user
#might be able to resolve the conflict and resubmit the request.
CLIENT_ERROR_CONFLICT = 409

#The requested resource is no longer available at the server and no forwarding address
#is known. This condition is expected to be considered permanent. Clients with link
#editing capabilities SHOULD delete references to the Request-URI after user approval.
#If the server does not know, or has no facility to determine, whether or not the
#condition is permanent, the status code 404 (Not Found) SHOULD be used instead. 
CLIENT_ERROR_GONE = 410

#The server refuses to accept the request without a defined Content - Length.
CLIENT_ERROR_LENGTH_REQUIRED = 411

#The precondition given in one or more of the request-header fields evaluated to
#false when it was tested on the server. This response code allows the client to
#place preconditions on the current resource metainformation (header field data)
#and thus prevent the requested method from being applied to a resource other
#than the one intended.
CLIENT_ERROR_PRECONDITION_FAILED = 412

#The server is refusing to process a request because the request entity is larger
#than the server is willing or able to process. The server MAY close the connection
#to prevent the client from continuing the request.
CLIENT_ERROR_REQUEST_ENTITY_TOO_LARGE = 413

#The server is refusing to service the request because the Request-URI is longer
#than the server is willing to interpret. This rare condition is only likely to
#occur when a client has improperly converted a POST request to a GET request with
#long query information, when the client has descended into a URI "black hole" of
#redirection (e.g., a redirected URI prefix that points to a suffix of itself), or
#when the server is under attack by a client attempting to exploit security holes
#present in some servers using fixed-length buffers for reading or manipulating
#the Request-URI.
CLIENT_ERROR_REQUEST_URI_TOO_LONG = 414

#The server is refusing to service the request because the entity of the request
#is in a format not supported by the requested resource for the requested method.
CLIENT_ERROR_UNSUPPORTED_MEDIA_TYPE = 415

#A server SHOULD return a response with this status code if a request included
#a Range request-header field, and none of the range-specifier values in this
#field overlap the current extent of the selected resource, and the request
#did not include an If-Range request-header field.
CLIENT_ERROR_REQUESTED_RANGE_NOT_SATISFIABLE = 416

#The expectation given in an Expect request-header field could not be met by
#this server, or, if the server is a proxy, the server has unambiguous evidence
#that the request could not be met by the next-hop server.
CLIENT_ERROR_EXPECTATION_FAILED = 417

#The server encountered an unexpected condition which prevented it from
#fulfilling the request.
SERVER_ERROR_INTERNAL = 500

#The server does not support the functionality required to fulfill the request.
#This is the appropriate response when the server does not recognize the request
#method and is not capable of supporting it for any resource.
SERVER_ERROR_NOT_IMPLEMENTED = 501

#The server, while acting as a gateway or proxy, received an invalid response
#from the upstream server it accessed in attempting to fulfill the request.
SERVER_ERROR_BAD_GATEWAY = 502

#The server is currently unable to handle the request due to a temporary
#overloading or maintenance of the server. The implication is that this is
#a temporary condition which will be alleviated after some delay. If known,
#the length of the delay MAY be indicated in a Retry-After header. If no
#Retry-After is given, the client SHOULD handle the response as it would
#for a 500 response.
SERVER_ERROR_SERVICE_UNAVAILABLE = 503

#The server, while acting as a gateway or proxy, did not receive a timely
#response from the upstream server specified by the URI (e.g. HTTP, FTP, LDAP)
#or some other auxiliary server (e.g. DNS) it needed to access in attempting
#to complete the request.
SERVER_ERROR_GATEWAY_TIMEOUT = 504

#The server does not support, or refuses to support, the HTTP protocol version
#that was used in the request message. The server is indicating that it is unable
#or unwilling to complete the request using the same major version as the client,
#as described in section 3.1, other than with this error message. The response
#SHOULD contain an entity describing why that version is not supported and what
#other protocols are supported by that server.
SERVER_ERROR_HTTP_VERSION_NOT_SUPPORTED = 505